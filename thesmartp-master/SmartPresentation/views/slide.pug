head
  meta(charset='utf-8')
  meta(name='viewport' content='width=device-width, height=device-height, minimum-scale=1.0, maximum-scale=1.0, initial-scale=1.0')
  title Smart Presentation
  link(rel='stylesheet' href='assets/css/main.css')
  style.
    html,body{
    margin:0;
    height:1080;
    overflow:hidden;
    }
    img{
    vertical-align:bottom;
    margin:0;
    padding:0;
    }
    .container{
      display:flex;
      

    }
    .left1 {
    width: 70%;
    
    flex-basis:70%;
    flex-shrink:0;
    }
    .right1 {
    width: 30%;
    height:100%;
    flex-basis:30%;
    flex-shrink:0;
    }

  // 바뀐 부분 #################################################################################
script.
  var current_slide=1;
  var num = "#{roomnum}";
  var rooms = "#{room}";
  (function(){
  document.addEventListener('keydown', function(e){
  const keyCode = e.keyCode;
  if(keyCode == 37){ // left key
  nextSlide(-1);
  current_slide+=-1;
  
  
  } else if(keyCode == 39){ // right key
  nextSlide(1);
  current_slide+=1;
  
  }
  })
  })();
  //이런식으로 스크립트에다가 현재 슬라이드 정보 담아주고 소켓으로 전송해서 한번 풀어보자

  //방향키가 슬라이드 값 -1보다 작아졌을 때  예외처리를 해보자
      
// 바뀐 부분 #################################################################################
header#header
  a.logo(href='/') The Smart Presentation
  div(style='position:fixed; right:10px; color:#ffffff; font-weight:bold;') http://thesmartp.com:8000/question/?id=#{queryData}
.container
  .left1
    head
      link(rel='stylesheet' type='text/css' href='assets/css/slide.css')
      //- script(src='./assets/js/slide.js')
    .slidercontainer
      
        -for(i=1;i<length;i++)
            .showSlide.fade
                img(src=`./user/${queryData}/${queryData}_${i}.png`)

        
    script.
      var slide_index = 1;
      
      displaySlides(slide_index);
      function nextSlide(n) {
        
      displaySlides(slide_index += n);
      
      
      }
      function currentSlide(n) {
      displaySlides(slide_index = n);
      
      }
      function displaySlides(n) {
      
      var i;
      var slides = document.getElementsByClassName("showSlide");
      if (n > slides.length) { slide_index = slides.length }
      if (n < 1) { slide_index = 1 }
      for (i = 0; i < slides.length; i++) {
      slides[i].style.display = "none";
      }
      slides[slide_index - 1].style.display = "block";
      socket.emit('slidechange', {type: 'message', message: slide_index},num)
      }
  .right1
    head
        meta(charset='utf-8')
        title &#xCC44;&#xD305;
        link(rel='stylesheet' href='/assets/css/start_lecture.css')
        script(src='/socket.io/socket.io.js')
    header
        head
            script(type='text/javascript' src='/assets/js/qrjs/jquery.min.js')
            script(type='text/javascript' src='/assets/js/qrjs/qrcode.js')
        div(style='border: 4px solid #fff;width:93px; position:fixed; right:0px;')
            #qrcode
        script(type='text/javascript').
            var qrcode = new QRCode(document.getElementById("qrcode"), {
            text: `#{ipAddress}:8000/question/?id=`+ "#{queryData}",// 이부분은 수정이 필요함
            width: 85,
            height: 85,
            colorDark : "#000000",
            colorLight : "#ffffff",
            correctLevel : QRCode.CorrectLevel.H
            });
    #main
      p.button(style='position:fixed; right:95px; height:40px; top:50px;' onclick='changeCSS(0)') +
      p.button(style='position:fixed; right:95px; height:40px; top:95px;' onclick='changeCSS(1)') -
      #chat
        // 채팅 메시지 영역
      div
        // <input type="text" id="test" placeholder="메시지를 입력해주세요..">
        // <button onclick="send()">전송</button>
    script.
        function changeCSS(n) {
        if(n==0){
        chat.style.height='95%';
        }
        else if (n==1){
        chat.style.height='0px';
        }
        }
        var socket = io()
        var num= "#{roomnum}"
        
        /* 접속 되었을 때 실행 */
        socket.on('connect', function() {
        /* 서버에 새로운 유저가 왔다고 알림 */
        socket.emit('newUser', name)
        socket.emit('joinRoom', num)
        })
        /* 서버로부터 데이터 받은 경우 */
        socket.on('update', function(data) {
        var chat = document.getElementById('chat')
        var message = document.createElement('div')
        var node = document.createTextNode(data.name+":"+data.message)
        var className = ''
        // 타입에 따라 적용할 클래스를 다르게 지정
        switch(data.type) {
        case 'message':
        className = 'other'
        break
        case 'connect':
        className = 'connect'
        break
        case 'disconnect':
        className = 'disconnect'
        break
        }
        message.classList.add(className)
        message.appendChild(node)
        chat.appendChild(message)
        var scroll = document.getElementById("chat");
        scroll.scrollTop = scroll.scrollHeight;
        })
      /* 메시지 전송 함수 */
      function send() {
        
      // 입력되어있는 데이터 가져오기
      var message = document.getElementById('test').value
      // 가져왔으니 데이터 빈칸으로 변경
      document.getElementById('test').value = ''
      // 내가 전송할 메시지 클라이언트에게 표시
      var chat = document.getElementById('chat')
      var msg = document.createElement('div')
      var node = document.createTextNode(message)
      msg.classList.add('me')
      msg.appendChild(node)
      chat.appendChild(msg)
      // 서버로 message 이벤트 전달 + 데이터와 함께
      
      socket.emit('message', {type: 'message', message: message},num)
      }
